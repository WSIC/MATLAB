function headerWriter(headerInformation,fileName,writeComments)
%HEADERWRITER creates a Siemens Inveon (R) header file from a structure.
%
% USAGE: 
%     headerWriter(headerInformation,fileName);
%        Will create the headerfile given in 'fileName' using the 
%        information in 'headerInformation'.
%     headerWriter(headerInformation);
%        Will create the headerfile. Asks for destination.
%     headerWriter(headerInformation,fileName,false);
%        As above, but without comments in the header file.
%
% version 20140214. Last update: now includes comments.
% J.A. Disselhorst 2009-2014
% University of Twente, Enschede (NL)
% Radboud University Medical Center, Nijmegen (NL)
% Werner Siemens Imaging Center, Tuebingen (DE)
%
% Disclaimer:
% THIS SOFTWARE IS BEING PROVIDED "AS IS", WITHOUT WARRANTY OF ANY
% KIND, EITHER EXPRESSED OR IMPLIED AND IS TO BE USED AT YOUR OWN RISK 

if nargin<3
    writeComments = true;
end
if nargin==1
    [fileName,PathName] = uiputfile({'*.hdr','Header files (*.hdr)'; ...
        '*.txt','Text files (*.txt)'; '*.*','All files (*.*)'},'Save as');
    if fileName
        fileName = fullfile(PathName,fileName);
    else
        error('no file selected!')
    end
elseif nargin==0
    error('Invalid number of arguments');
end

    

headerFile = fopen(fileName,'wt');
if headerFile==-1
    error('Unable to open file!')
end
if writeComments
    try fprintf(headerFile,'#\n# Header file for data file %s\n#\n# headerWriter.m (JA Disselhorst)\n# Date: %s\n# User: %s\n',fileName(:,1:end-4),datestr(now),getenv('username'));end
end

fnames = fieldnames(headerInformation);
% These should be 'General' and optionally several 'frame_#'
for i = 1:length(fnames)
    groupName = char(fnames(i));
    if strncmp('frame',groupName,5)
        fprintf(headerFile,'#\n# Frame number (integer)\n#\n%s\n',strrep(groupName,'_', ' ')); %replace the underscore to a space.
    end

    fnames2 = fieldnames(headerInformation.(groupName));
    for j = 1:length(fnames2)
        varName = char(fnames2(j));
        if writeComments
            comment = getCommentString(varName);
            fprintf(headerFile,'%s\n',comment);
        end
        varValue = headerInformation.(groupName).(varName);
        valueType = class(varValue);
        switch valueType
            case 'char'
                fprintf(headerFile,'%s %s\n',varName,strtrim(varValue));
            case 'double'
                numRows = size(varValue,1);
                for k = 1:numRows
                    fprintf(headerFile,'%s',varName);
                    temp = varValue(k,:);
                    for l = 1:length(temp)
                        if temp(l)==round(temp(l)) % Integer
                            fprintf(headerFile,' %u',uint64(temp(l)));
                        else % Float
                            fprintf(headerFile,' %g',temp(l));
                        end
                    end
                    fprintf(headerFile,'\n');
                end
            case 'cell'
                numRows = size(varValue,1);
                for k = 1:numRows
                    fprintf(headerFile,'%s %s\n',varName,char(varValue(k,1)));
                end
            otherwise
                fprintf('Skipping %s\n',varName);
        end
    end
    
end

fclose(headerFile);


    function commentString = getCommentString(varName)
        allCommentStrings = {'version','Version of header parameters (float)'; ...
    'manufacturer','Manufacturer''s name (string)'; ...
    'model','Scanner model number (integer)\n\n     0 - Unknown\n  2000 - Primate\n  2001 - Rodent\n  2002 - microPET2\n  2500 - Focus_220\n  2501 - Focus_120\n  3000 - mCAT\n  3500 - mCATII\n  4000 - mSPECT\n  5000 - Inveon_Dedicated_PET\n  5001 - Inveon_MM_Platform\n  6000 - MR_PET_Head_Insert  \n  8000 - Tuebingen_PET_MR'; ...
    'modality','Acquisition scanner modality (integer)\n\n  -1 - Unknown acquisition modality\n   0 - PET acquisition\n   1 - CT acquisition\n   2 - SPECT acquisition'; ...
    'modality_configuration','Scanner modality configuration number (integer)\n\n     0 - Unknown\n  2000 - Primate\n  2001 - Rodent\n  2002 - microPET2\n  2500 - Focus_220\n  2501 - Focus_120\n  5000 - Inveon_Dedicated_PET\n  6000 - MR_PET_Head_Insert\n  8000 - Tuebingen_PET_MR\n  5500 - Inveon_MM_PET'; ...
    'institution','Institution identification (string)'; ...
    'study','Study type/description (string)'; ...
    'file_name','Data filename, possibly including path (string)\n   NOTE: Filename may contain spaces, therefore the ENTIRE\n         line, up to the EOL, is used after the parameter name.'; ...
    'file_type','Data file type (integer)\n  0 - Unknown data file type\n  1 - List mode data file\n  2 - Sinogram data file\n  3 - Normalization data file\n  4 - Attenuation correction data file\n  5 - Image data file\n  6 - Blank data file\n  8 - Mu map data file\n  9 - Scatter correction data file\n  10 - Crystal efficiency data\n  11 - Crystal interference correction\n  12 - Transaxial geometric correction\n  13 - Axial geometric correction\n  14 - CT projection data\n  15 - SPECT raw projection data\n  16 - SPECT energy data from projections\n  17 - SPECT normalization data'; ...
    'acquisition_mode','Acquisition mode (integer)\n  0 - Unknown acquisition mode\n  1 - Blank acquisition\n  2 - Emission acquisition\n  3 - Dynamic acquisition\n  4 - Gated acquisition\n  5 - Continuous bed motion acquisition\n  6 - Singles transmission acquisition\n  7 - Windowed coincidence transmission acquisition\n  8 - Non-windowed coincidence transmission acquisition\n  9 - CT projection acquisition\n  10 - CT calibration acquisition\n  11 - SPECT planar projection acquisition\n  12 - SPECT multi-projection acquisition\n  13 - SPECT calibration acquisition\n  14 - SPECT normalization acquisition\n  15 - SPECT detector setup acquisition\n  16 - SPECT scout view acquisition';...
    'total_frames','Number of frames in data file (integer)';...
    'time_frames','Number of time frames in data file (integer)';...
    'bed_control','Bed control (integer)\n  0 - Unknown bed control\n  1 - Dedicated PET\n  2 - microCAT II\n  3 - Multimodality bed control\n  4 - microPET bed control';...
    'bed_motion','Bed motion (integer)\n  0 - Static or unknown bed motion\n  1 - Continuous bed motion\n  2 - Multiple bed positions, i.e. step and shoot';...
    'number_of_bed_positions','Number of bed positions in data file (integer)';...
    'horizontal_bed_calibration','Horizontal bed calibration, in microns (float)';...
    'vertical_bed_calibration','Vertical bed calibration, in microns (float)';...
    'transaxial_bin_size','Transaxial projection bin size, in cm (float)';...
    'axial_plane_size','Axial plane size, in cm (float)';...
    'number_detector_panels','Number of detector panels ("rings/CT" are "1") (integer)';...
    'data_type','Data type (integer)\n  0 - Unknown data type\n  1 - Byte (8-bits) data type\n  2 - 2-byte integer - Intel style\n  3 - 4-byte integer - Intel style\n  4 - 4-byte float - Intel style\n  5 - 4-byte float - Sun style\n  6 - 2-byte integer - Sun style\n  7 - 4-byte integer - Sun style';...
    'number_of_dimensions','Number of dimensions in data set (integer)\n    Order from fastest to slowest is XYZW';...
    'x_dimension','Size of X dimension in data set (integer)';...
    'y_dimension','Size of Y dimension in data set (integer)';...
    'z_dimension','Size of Z dimension in data set (integer)';...
    'acquisition_user_id','Acquisition user ID (string)';...
    'histogram_user_id','Histogram user ID (string)';...
    'reconstruction_user_id','Reconstruction user ID (string)';...
    'scatter_correction_user_id','Scatter correction user ID (string)';...
    'acquisition_notes','Acquisition notes (string)';...
    'scan_time','Scan start date and time (string)\n   Format is: Sun Sep 16 01:03:52 1973';...
    'gmt_scan_time','Scan start date and time - GMT-based (string)\n   Format is: Sun Sep 16 01:03:52 1973';...
    'volume_origin_x','X origin of volume, in voxels (integer)';...
    'volume_origin_y','Y origin of volume, in voxels (integer)';...
    'volume_origin_z','Z origin of volume, in voxels (integer)';...
    'registration_available','Registration data available (integer)\n  0 - No registration data available\n  1 - CT registration data available\n  2 - PET registration data available';...
    'transformation_matrix','Transformation matrix filename, possibly including path (string)\n   NOTE: Filename may contain spaces, therefore the ENTIRE \n         line, up to the EOL, is used after the parameter name.';...
    'spatial_identifier','Spatial identification for registration (string)';...
    'normalization_applied','Normalization applied to data set (integer)\n  0 - No normalization applied\n  1 - Point source inversion\n  2 - Point source component based\n  3 - Cylinder source inversion\n  4 - Cylinder source component based\n  5 - Dark/bright field log normalization (CT)\n  6 - SPECT flood inversion based';...
    'normalization_filename','Normalization filename, possibly including path (string)\n   NOTE: Filename may contain spaces, therefore the ENTIRE \n         line, up to the EOL, is used after the parameter name.';...
    'recon_algorithm','Reconstruction type (integer)\n  0 - Unknown, or no, algorithm type\n  1 - Filtered Backprojection\n  2 - OSEM2d\n  3 - OSEM3d\n  6 - OSEM3D followed by MAP or FastMAP\n  7 - MAPTR for transmission image\n  8 - MAP 3D reconstruction\n  9 - Feldkamp cone beam';...
    'recon_version','Version of reconstruction program used (float)';...
    'x_filter','X filter and/or apodizing windows type (integer)\n      and cutoff (float)\n  0 - No filter\n  1 - Ramp filter (backprojection) or no filter\n  2 - First-order Butterworth window\n  3 - Hanning window\n  4 - Hamming window\n  5 - Parzen window\n  6 - Shepp filter\n  7 - Second-order Butterworth window\n  NOTE that a cutoff of 0.5 is the Nyquist point\n    i.e 1.0 / (2.0 * sampling).\n    Also, the Ramp and Shepp should ONLY be used\n    for backprojection';...
    'y_filter','Y apodizing filter type (integer) and cutoff (float)\n  0 - No filter\n  2 - First-order Butterworth window\n  3 - Hanning window\n  4 - Hamming window\n  5 - Parzen window\n  7 - Second-order Butterworth window\n  NOTE that a cutoff of 0.5 is the Nyquist point\n    i.e 1.0 / (2.0 * sampling).';...
    'z_filter','Z apodizing filter type (integer) and cutoff (float)\n  0 - No filter\n  2 - First-order Butterworth window\n  3 - Hanning window\n  4 - Hamming window\n  5 - Parzen window\n  7 - Second-order Butterworth window\n  NOTE that a cutoff of 0.5 is the Nyquist point\n    i.e 1.0 / (2.0 * sampling).';...
    'x_offset','X offset, in cm, applied to data set (float)';...
    'y_offset','Y offset, in cm, applied to data set (float)';...
    'z_offset','Z offset, in cm, applied to data set (float)';...
    'zoom','Zoom applied to data set (float)';...
    'pixel_size','Reconstructed pixel size, in cm (float)\n    NOTE: pixel_size = (((X_crystal_pitch / 2.0) * X_dim) /\n          (image_size * zoom)) * (effective_radius / radius)';...
    'pixel_size_x','Reconstructed pixel size in X, in mm (float)';...
    'pixel_size_y','Reconstructed pixel size in Y, in mm (float)';...
    'pixel_size_z','Reconstructed pixel size in Z, in mm (float)';...
    'investigator','Investigator identification (string)';...
    'operator','Operator identification (string)';...
    'study_identifier','Study identification (string)';...
    'injected_compound','Injected compound (string)';...
    'subject_identifier','Subject identifier (string)';...
    'subject_genus','Subject genus (string)';...
    'subject_orientation','Subject orientation (integer)\n  0 - Unknown subject orientation\n  1 - Feet first, prone\n  2 - Head first, prone\n  3 - Feet first, supine\n  4 - Head first, supine\n  5 - Feet first, right\n  6 - Head first, right\n  7 - Feet first, left\n  8 - Head first, left';...
    'subject_length_units','Length units (integer)\n  0 - Unknown length units\n  1 - millimeters\n  2 - centimeters\n  3 - inches';...
    'subject_length','Subject length (float)';...
    'subject_weight_units','Weight units (integer)\n  0 - Unknown weight units\n  1 - grams\n  2 - ounces\n  3 - kilograms\n  4 - pounds';...
    'subject_weight','Subject weight (float)';...
    'subject_phenotype','Subject phenotype (string)';...
    'study_model','Study model (string)';...
    'anesthesia','Subject anesthesia (string)';...
    'analgesia','Subject analgesia (string)';...
    'other_drugs','Other drugs (string)';...
    'food_access','Food access (string)';...
    'water_access','Water access (string)';...
    'subject_date_of_birth','Subject date of birth (string)';...
    'subject_age','Subject age (string)';...
    'subject_sex','Subject sex (string)';...
    'subject_scan_region','Subject scan region (string)';...
    'acquisition_file_name','Original acquisition filename, DOES NOT INCLUDE path (string)\n   NOTE: Filename may contain spaces, therefore the ENTIRE \n         line, up to the EOL, is used after the parameter name.';...
    'transaxial_crystal_pitch','Transaxial crystal pitch, in cm (float)';...
    'axial_crystal_pitch','Axial crystal pitch, in cm (float)';...
    'crystal_thickness','Crystal thickness, in cm (float)';...
    'depth_of_interaction','Depth of interaction, in cm (float)';...
    'isotope','Isotope description (string)';...
    'isotope_half_life','Isotope half-life, in secs (float)';...
    'isotope_branching_fraction','Isotope branching fraction (float)\n  NOTE: Frame scale factor DOES NOT include\n        isotope branching fraction.';...
    'deadtime_correction_applied','Deadtime correction applied to data set (integer)\n  0 - No deadtime correction applied\n  1 - Global estimate based on singles\n  2 - CMS estimate based on singles\n  3 - Global estimate based on running deadtime average\n  4 - Blank/TX singles estimate (block based)\n  5 - Old Global estimate based on singles (not continues)';...
    'decay_correction_applied','Decay correction applied to data set (integer)\n    0 (FALSE) - Decay correction has NOT been applied\n    !0 (TRUE) - Decay correction has been applied';...
    'attenuation_applied','Attenuation applied to data set (integer)\n  0 - No attenuation applied\n  1 - Point source in windowed TX coincidence\n  2 - Point source singles based TX\n  3 - Segmented point source in TX coincidence\n  4 - Segmented point source singles based TX\n  5 - Calculated by geometry\n  6 - Non-positron source singles based TX\n  7 - Point source in non-windowed TX coincidence\n  8 - Generated from CT image';...
    'scatter_correction','Scatter correction applied to data set (integer)\n  0 - No scatter correction applied\n  1 - Fit of emission tail\n  2 - Monte Carlo of emission and transmission data\n  3 - Direct calculation from analytical formulas\n  4 - Model-based scatter for singles TX\n  5 - TX off-window windowed coincidence subtraction\n  6 - Singles TX scaled scatter from attenuation subtraction';...
    'calibration_units','Calibration units (integer)\n  0 - Unknown calibration units\n  1 - nCi/cc\n  2 - Bq/cc';...
    'calibration_factor','Calibration factor (float)\n  NOTE: Frame scale factor DOES NOT include\n        calibration factor.';...
    'calibration_branching_fraction','Calibration source branching fraction (float)\n  NOTE: Frame scale factor DOES NOT include\n        calibration source branching fraction.';...
    'dose_units','Dose units (integer)\n  0 - Unknown dose units\n  1 - mCi\n  2 - MBq';...
    'dose','Injected dose (float)';...
    'injection_time','Injection date and time (string)\n   Format is: Sun Sep 16 01:03:52 1973';...
    'injection_decay_correction','Injection decay correction factor (float)\n  NOTE: Frame scale factor and decay correction factor\n  DO NOT include injection decay correction factor.';...
    'activity_units','Pre- and residual activity units (integer)\n  0 - Unknown dose units\n  1 - mCi\n  2 - MBq';...
    'activity_before_injection','Activity before injection (float)';...
    'activity_before_injection_time','Activity before injection measurement date and time (string)\n   Format is: Sun Sep 16 01:03:52 1973';...
    'residual_activity','Residual activity (float)';...
    'residual_activity_time','Residual activity measurement date and time (string)\n   Format is: Sun Sep 16 01:03:52 1973';...
    'transaxial_crystals_per_block','Transaxial crystals per block (integer)';...
    'axial_crystals_per_block','Axial crystals per block (integer)';...
    'intrinsic_crystal_offset','Crystal offset for intrinsic rotation (integer)';...
    'transaxial_blocks','Number of transaxial blocks (integer)';...
    'axial_blocks','Number of axial blocks (integer)';...
    'radius','Ring radius to crystal face, in cm (float)';...
    'radial_fov','Radial field-of-view, in cm (float)';...
    'src_radius','Source radius, in cm (float)';...
    'src_cm_per_rev','Source axial cm per revolution, in cm (float)';...
    'src_steps_per_rev','Source encoder steps per revolution (integer)';...
    'default_projections','Default number of projections (integer)';...
    'default_transaxial_angles','Default number of transaxial angles (integer)';...
    'lld','Lower level energy threshold, in KeV (float)';...
    'uld','Upper level energy threshold, in KeV (float)';...
    'timing_window','Coincidence timing window, in nsecs (int or float)';...
    'span','Span of data set (integer)';...
    'ring_difference','Maximum ring difference of data set (integer)';...
    'w_dimension','Size of W dimension in data set (integer)';...
    'histogram_version','Version of histogram program used (float)';...
    'rebinning_type','Rebinning type (integer)\n  0 - Unknown, or no, algorithm type\n  1 - Full 3D binning (span and ring difference)\n  2 - Single-Slice Rebinning\n  3 - Fourier Rebinning';...
    'rebinning_version','Version of rebinning program used (float)';...
    'tx_src_type','Source type (integer)\n  0 - Unknown TX source type\n  1 - TX point source\n  2 - TX line source';...
    'data_order','Data order (integer)\n  0 - Element/Axis/View/Ring_Diff - view mode\n  1 - Element/View/Axis/Ring_Diff - sinogram mode\n NOTE that ElVwAxRd (XYZW) is the data order for images.\n      ElVwAxRd for images means that Z and Y are flipped.';...
    'osem2d_method','OSEM2D method (integer)\n  0 - Unweighted osem2d reconstruction\n  1 - Attenuation weighted osem2d reconstruction';...
    'osem2d_subsets','Number of osem2d subsets (integer)';...
    'osem2d_iterations','Number of osem2d iterations (integer)';...
    'osem2d_em_iterations','Number of EM iterations after osem2d iterations (integer)';...
    'osem2d_map','Epsilon and power values for map regularization (float integer)';...
    'osem2d_x_offset','Large object osem2d x_offset in cm (float)';...
    'osem2d_y_offset','Large object osem2d y_offset in cm (float)';...
    'osem2d_zoom','Large object osem2d zoom (float)';...
    'map_subsets','Number of subsets in MAP reconstruction (integer)';...
    'map_iterations','Number of MAP iterations (integer)';...
    'map_beta','Beta value for MAP reconstruction (float)';...
    'map_op','Ordinary Poisson for MAP reconstruction (int)';...
    'fastmap','Type of MAP used (integer)\n\n  0 - MAP\n  1 - FastMAP';...
    'fastmap_corrections','Corrections used in Fast MAP (integer)\n\n  0 - No FastMAP corrections\n  1 - FastMAP axial resampling and arc correction';...
    'fastmap_irb_file_name','Fast MAP IRB table filename, possibly including path (string)\n   NOTE: Filename may contain spaces, therefore the ENTIRE\n         line, up to the EOL, is used after the parameter name.';...
    'map_resolution_in_mm','Map or Fast MAP resolution in mm (float)';...
    'map_osem3d_iterations','Number of osem3d iterations in MAP reconstruction (integer)';...
    'map_blur_type','MAP blur kernel type (int)';...
    'map_prior_type','MAP prior type (int)';...
    'map_blur_file','MAP blur kernel file prefix (string)';...
    'map_pmatrix_file','MAP P matrix file prefix (string)';...
    'arc_correction_applied','Arc correction applied to data set (integer)\n  0 - Unknown, or no, arc correction\n  1 - Radial arc correction (1D)\n  2 - Resampled radial/angular arc correction (2D)';...
    'number_of_singles_rates','Number of singles rates in subheader (integer)\n  NOTE: This normally is the number of blocks.';...
    'subject_glucose_level','Subject glucose level (string)';...
    'subject_glucose_level_time','Subject glucose level measurement time (string)';...
    'end_of_header','End of Header indicator';...
    'detector_panel','Detector panel - NOTE: "ring" systems are "0" ONLY (integer)';...
    'event_type','Event type (integer)\n  0 - Unknown event type\n  1 - Singles\n  2 - Prompt events (coincidences)\n  3 - Delay events\n  4 - Trues (prompts - delays)\n  5 - Energy spectrum data';...
    'energy_window','Energy window - NOTE PET/CT systems are typically "0" ONLY (integer)';...
    'gate','Gate number (integer)';...
    'bed','Bed number (integer)';...
    'bed_offset','Bed offset, in cm (float)';...
    'ending_bed_offset','Ending horizontal bed offset, in cm (float)';...
    'vertical_bed_offset','Vertical bed offset, in cm (float)';...
    'data_file_pointer','Data file offset to start of data (2 32-bit ints)\n    Values are: low_part\n            or: high_part low_part';...
    'frame_start','Frame start time, in secs (float)';...
    'frame_duration','Frame duration, in secs (float)';...
    'scale_factor','Scale factor for data set (float)';...
    'minimum','Minimum value in data set (float)';...
    'maximum','Maximum value in data set (float)';...
    'deadtime_correction','Deadtime correction for data set (float)\n            NOTE: Scale factor INCLUDES this value.';...
    'decay_correction','Global decay correction applied to data set (float)\n            NOTE: Scale factor INCLUDES this value.';...
    'prompts','Prompts count for data set (64-bit ints)\n\n  NOTE: The 3 values represent histogrammed prompts,\n        unhistogrammed prompts, and prompts at coincidence detection.';...
    'prompts_rate','Prompts countrate per sec before histogramming (int)';...
    'delays','Delays count for data set (64-bit ints)\n\n  NOTE: The 3 values represent histogrammed delays, \n        unhistogrammed delays, and delays at coincidence detection.';...
    'trues','Trues count for data set (64-bit ints)\n\n  NOTE: The 3 values represent histogrammed trues, \n         unhistogrammed trues, and trues at coincidence detection.';...
    'delays_rate','Delays countrate per sec before histogramming (int)';...
    'singles','Singles rates array (integer  float  float)\n      block_number    singles/sec    raw_singles/sec    xy_stored_singles/sec    block_singles_output/sec    raw_block_prompts/sec    block_prompts/sec    raw_block_delays/sec    block_delays/sec';...
    'gantry_rotation','Gantry rotation (integer)\n\n  0 - No gantry rotation\n  1 - Rotation with discrete steps\n  2 - Continuous rotation';...
    'ct_file_version','CAT file version (integer)';...
    'ct_header_size','Header size of CAT files before dark and light projections (integer)';...
    'ct_proj_size_transaxial','CT transaxial projection size, in pixels (integer)';...
    'ct_proj_size_axial','CT axial projection size, in pixels (integer)';...
    'ct_average_dark_projections','Number to average the dark calibration projections (integer)';...
    'ct_average_light_projections','Number to average the light calibration projections (integer)';...
    'ct_light_calibration_projections','Total positions to acquire the light calibration projections (integer)';...
    'ct_dependent_light_calibration_projections','Indicates if the positions to acquire light projections are same as scan projection positions (integer)';...
    'ct_xray_detector_offset','CT X-ray detector offset, in mm (float)';...
    'ct_detector_transaxial_position','CT detector transaxial position, in cm (float)';...
    'ct_uncropped_transaxial_pixels','CT detector uncropped transaxial pixels (integer)';...
    'ct_uncropped_axial_pixels','CT detector uncropped axial pixels (integer)';...
    'ct_cropped_transaxial_pixels','CT detector cropped transaxial pixels (integer)';...
    'ct_cropped_axial_pixels','CT detector cropped axial pixels (integer)';...
    'ct_xray_detector_pitch','CT X-ray detector pitch, in um (float)';...
    'ct_horiz_rot_axis_bed_angle','CT horizontal rotation-axis-bed angle, in degrees (float)';...
    'ct_vert_rot_axis_bed_angle','CT vertical rotation-axis-bed angle, in degrees (float)';...
    'ct_exposure_time','CT exposure time, in msecs (float)';...
    'ct_scan_time','CT total scan time, in min:sec (integer:integer)';...
    'ct_warping','CT warping type (integer)\n  0 - Unknown warping type\n  1 - No warping\n  2 - Bilinear warping\n  3 - Nearest neighbor warping';...
    'ct_defect_map_file_name','CT defect map filename, possibly including path (string)\n   NOTE: Filename may contain spaces, therefore the ENTIRE \n         line, up to the EOL, is used after the parameter name.';...
    'ct_xray_voltage','CT x-ray voltage, in kVp (float)';...
    'ct_anode_current','CT anode current, in uA (float)';...
    'ct_calibration_exposures','Number of CT calibration exposures (integer)';...
    'ct_cone_angle','CT cone angle, in degrees (float)';...
    'ct_projection_interpolation','CT projection interpolation type (integer)\n  0 - Unknown projection interpolation type\n  1 - Bilinear projection interpolation\n  2 - Nearest neighbor projection interpolation';...
    'ct_source_to_detector','CT source to detector distance, in cm (float)';...
    'ct_source_to_crot','CT source to center of rotation, in cm (float)';...
    'ct_detector_vertical_offset','CT vetical detector offset, in pixels (float)';...
    'ct_detector_horizontal_tilt','CT detector tilt relative to horizontal axis, in degrees (float)';...
    'ct_detector_vertical_tilt','CT detector tilt relative to vertical axis, in degrees (float)';...
    'ct_transaxial_bin_factor','CT axial projection bin factor, in pixels (integer)';...
    'ct_axial_bin_factor','CT axial projection bin factor, in pixels (integer)';...
    'ct_gating','CT gating signal used (integer)';...
    'ct_hounsfield_scale','CT Hounsfield scale (float)';...
    'ct_hounsfield_offset','CT Hounsfield offset (float)';...
    'ct_proj_downsample_factor','CT projection downsample factor (integer)';...
    'ct_first_recon_proj','CT first projection used in reconstruction (integer)';...
    'ct_last_recon_proj','CT last projection used in reconstruction (integer)';...
    'ct_recon_every_nth_proj','CT every Nth projection used for reconstruction (integer)';...
    'ct_attenuation_water','CT attenuation of water, in cm^-1 (float)';...
    'ct_tx_rotation_offsets','CT TX rotation offsets: X Y Z, in mm (float)';...
    'ct_tx_transaxial_offsets','CT TX transaxial offsets: X Y Z, in mm (float)';...
    'ct_bh_correction','CT BH correction applied (int)\n    0 (FALSE) - CT BH correction has NOT been applied\n    !0 (TRUE) - CT BH correction has been applied';...
    'ct_bh_correction_coefficients','CT BH correction coefficients (float  float  float   float)\n  NOTE: This is ONLY present when BH correction has been applied.';...
    'ct_aluminum_filter_thickness','CT aluminum filter thickness (mm) (float)';...
    'ct_projection_average_center_offset','CT projection average center offset (float)';...
    'projection','CT projection array (integer  float)\n      projection_number    acquisition_position (degrees)';...
    'ct_projection_center_offset','CT projection average center offset array (integer  float)\n      projection_number    average center offset (mm)';...
    'ct_projection_horizontal_bed_offset','CT projection horizontal bed offset array (integer  float)\n      projection_number    horizontal bed offset (mm)';...
    'rotation','Rotation, in degrees, applied to data set (not applied to OSEM2d reconstructions) (float)';...
    'bed_passes','Number of bed passes during frame (integer)';...
    'attenuation_filename','Attenuation correction filename, possibly including path (string)\n   NOTE: Filename may contain spaces, therefore the ENTIRE \n         line, up to the EOL, is used after the parameter name.';...
    'osem3d_subsets','Number of osem3d subsets (integer)';...
    'osem3d_iterations','Number of osem3d iterations (integer)';...
    'rotation_direction','Rotation direction (integer)\n    0 - Clockwise\n    1 - Counterclockwise';...
    'rotating_stage_start_position','Rotating gantry starting angle, in degrees (float)';...
    'rotating_stage_stop_position','Rotating gantry stop angle, in degrees (float)';...
    'number_of_projections','Number of rotation projections per revolution for rotating gantry (integer)';...
    'gantry_revolutions','Number of gantry revolutions for rotating gantry (float)';...
    'spect_crystal_lookup_file_name','SPECT crystal lookup file name used during histogramming (string)\n   NOTE: Filename may contain spaces, therefore the ENTIRE \n         line, up to the EOL, is used after the parameter name.';...
    'spect_energy_lookup_file_name','SPECT energy lookup file name used during histogramming (string)\n   NOTE: Filename may contain spaces, therefore the ENTIRE \n         line, up to the EOL, is used after the parameter name.';...
    'spect_detector','SPECT detectors that contributed to the data\n  NOTE: The number of SPECT detectors that contributed (integer)\n        is followed by a vector of at least one up to detector_panels (integer).';...
    'spect_detector_position','Detector panel positions, in degrees (float)';...
    'spect_transaxial_crystals_per_detector','SPECT transaxial crystals per detector panel (integer)';...
    'spect_axial_crystals_per_detector','SPECT axial crystals per detector panel (integer)';...
    'spect_transaxial_offset','SPECT transaxial offset, in mm (float)';...
    'spect_axial_offset','SPECT axial offset, in mm (float)';...
    'spect_rotational_offset','SPECT rotational offset, in degrees (float)';...
    'spect_transaxial_tilt','SPECT transaxial tilt, in degrees (float)';...
    'spect_axial_tilt','SPECT axial tilt, in degrees (float)';...
    'spect_collimator_id','SPECT collimator ID per detector panel (integer)';...
    'spect_collimator_type','SPECT collimator type (integer)\n  -1 - Unknown collimator type\n   0 - No collimator\n   1 - Parallel hole collimator\n   2 - Pinhole collimator';...
    'spect_collimator_material','SPECT collimator material (integer)\n  -1 - Unknown collimator material\n   0 - Lead collimator\n   1 - Tungsten collimator\n   2 - Gold collimator\n   3 - Other collimator material';...
    'spect_collimator_transaxial_offset','SPECT collimator transaxial offset per detector panel in mm (float)';...
    'spect_collimator_axial_offset','SPECT collimator axial offset per detector panel in mm (float)';...
    'spect_parallel_hole_collimator_depth','SPECT parallel hole collimator hole depth, in mm (float)';...
    'spect_parallel_hole_collimator_aperture','SPECT parallel hole collimator aperture diameter, in mm (float)';...
    'spect_number_pinholes','SPECT number of pinholes in pinhole collimator (integer)\n   For multi-pinhole collimators, parameters are listed by detector number';...
    'spect_pinhole_params','SPECT Pinhole Parameters\n\n  The following parameters are written in one line of text and\n  repeated for the number of detectors with pinhole collimators\n  multiplied by the number of pinholes per collimator:\n\n  Detector_id (integer)\n  Pinhole_id (integer)\n  Focal_length (mm) (float)\n  Diameter (mm) (float)\n  Acceptance angle (degrees) (float)\n  Axial offset (mm) (float),            relative to center pinhole at (0,0)\n  Transaxial offset (mm) (float),       relative to center pinhole at (0,0)\n  Thickness (mm) (float),               thickness of pinhole plate\n  Depth (mm) (float),                   distance from pinhole center to\n                                        top of the pinhole plate\n  Keel (mm) (float),                    thickness of keel edge\n  X Y Z (float float float),            pinhole direction vector';...
    'spect_radius','SPECT radius to collimator face, in mm (float)\n   Parallel hole collimator: isocenter to collimator face\n   Pinhole collimator: isocenter to pinhole aperture';...
    'spect_transaxial_fov','SPECT transaxial FOV, in mm (float)';...
    'spect_axial_fov','SPECT axial FOV, in mm (float)';...
    'spect_first_proj_time','SPECT acquisition time of first projection, in secs (float)';...
    'spect_energy_bin_factor','SPECT energy bin factor, in KeV/bin (float)';...
    'spect_num_energy_windows','SPECT number of energy windows (integer)';...
    'spect_energy_window','SPECT energy window that contributed to the data.\n  NOTE: This is a vector of at least one up to spect_num_energy_windows (integer).';...
    'spect_llds','SPECT lower level energy thresholds for each energy window/detector panel, in KeV (float)\n    If 1 energy window:  Det_0 lld  Det_1 lld ...\n    If 2 energy windows: Det_0 lld_0  Det_0 lld_1  Det_1 lld_0  Det_2 lld_1';...
    'spect_ulds','SPECT upper level energy thresholds for each energy window/detector panel, in KeV (float)\n    If 1 energy window:  Det_0 lld  Det_1 lld ...\n    If 2 energy windows: Det_0 lld_0  Det_0 lld_1  Det_1 lld_0  Det_2 lld_1';...
    'spect_energy_windows_merged','SPECT detector energy windows merged (per detector panel) (integer)\n\n    0 (FALSE) - Energy windows NOT merged\n    !0 (TRUE) - Energy windows merged\n\n    Flag is meaningless if only one detector is used';...
    'spect_detector_projections_merged','SPECT detector projections merged (per detector panel) (integer)\n\n    0 (FALSE) - Detector projections NOT merged\n    !0 (TRUE) - Detector projections merged\n\n    Flag is meaningless if only one detector is used';...
    'projection_duration','Projection duration array (integer  float  float  float)\n      projection_number    projection_duration (secs)    average_projection angle (degs)    average_bed_position (cm)';};


        number = strcmp(varName,allCommentStrings(:,1));
        if any(number)
            commentString = allCommentStrings{number,2};
        else
            commentString = ['!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n',...
                             '!!!',strjust(sprintf('No comment string available for %-*s ',49,varName),'center'), '!!!\n',...
                             '!!!                           Please add to headerWriter.m                           !!!\n',...
                             '!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!'];
            fprintf('No comment written for variable: %s\n',varName);
        end
        commentString = [['#',sprintf('\n'),'# '], strrep(commentString,'\n',[sprintf('\n'),'# ']), [sprintf('\n'),'#']];
    end

end